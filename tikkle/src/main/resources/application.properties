spring.application.name=tikkle
app.frontend-url=https://tikkle-api.koreacentral.cloudapp.azure.com


# data.sql 실행되도록
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# ===== Server =====
server.port=8080

# ===== DB 연결 =====
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/secure_tikkle?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.datasource.username=tik
spring.datasource.password=Sally329!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# ===== JPA 설정 =====
# 개발 중에는 update, 운영에서는 validate/none 권장
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true

# SQL 실행 로그 출력
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# ----- NEWS API ----- 
news.api.key=496380cf34dd4487b8f30f18f5b562e6

# 1) Nginx 뒤에서 HTTPS/호스트 정보를 신뢰하도록
server.forward-headers-strategy=framework
server.use-forward-headers=true

# 2) 클라우드플레어 Pages(다른 도메인) → API 쿠키 공유 위해
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.same-site=none

# 3) 리다이렉트 URI를 명시적으로 고정하고 싶다면
spring.security.oauth2.client.registration.kakao.redirect-uri=https://tikkle-api.koreacentral.cloudapp.azure.com/login/oauth2/code/kakao
spring.security.oauth2.client.registration.naver.redirect-uri=https://tikkle-api.koreacentral.cloudapp.azure.com/login/oauth2/code/naver
spring.security.oauth2.client.registration.google.redirect-uri=https://tikkle-api.koreacentral.cloudapp.azure.com/login/oauth2/code/google
# (권장) OPTIONS를 MVC로 전달 확실히
spring.mvc.dispatch-options-request=true

# ----- OAuth 설정 ----- 
# Google OAuth 2.0
spring.security.oauth2.client.registration.google.client-id=535646853648-u3lekhm6mahq873ed06ln0irmtbtsebe.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

spring.security.oauth2.client.registration.google.scope=profile,email

# NAVER OAuth 2.0
spring.security.oauth2.client.registration.naver.client-id=RYVGA9q5G4Yeg2vSfPBY
spring.security.oauth2.client.registration.naver.client-secret=24X6Z2nZvZ

spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver
# Provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth 2.0 — registration
spring.security.oauth2.client.registration.kakao.client-id=134c1ffb59e4782f5d55a0f7b0dfc7a4
spring.security.oauth2.client.registration.kakao.client-secret=l5KBnGiLOEt3hUGMm4asrFZ3i5ICVGnI
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code

spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
# Kakao provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# -------------------- 


